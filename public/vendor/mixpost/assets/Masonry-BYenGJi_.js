import{C as d,L as g,R as _,l as z,d2 as b,S as k,o as a,c as r,F as v,r as h,z as E,e as L,H as B,f as C,t as N}from"./app-BxavtTYs.js";const R=["data-column"],D={__name:"Masonry",props:{items:{type:Array,required:!0},columns:{type:Number,default:3}},setup(l){const u=l,w=d(null),t=d([]),c=d(!1);g(()=>{i(),window.addEventListener("resize",m)}),_(()=>{window.removeEventListener("resize",m)});const m=z.debounce(()=>{t.value.length!==f().length&&i()},300),f=()=>{let e=u.columns;b().width<=768&&(e=2);const s=[];for(let n=0;n<e;n++)s.push({i:n,indexes:[]});return s},x=e=>{const s=e%t.value.length;t.value[s].indexes.push(e)},y=()=>{for(let e=0;e<u.items.length;e++)x(e)},i=()=>{c.value=!1,t.value.splice(0),t.value.push(...f()),c.value=!0,y()};return k(()=>u.items,()=>{i()}),(e,s)=>(a(),r("div",{class:B(["flex -m-1",{"opacity-0":!c.value}])},[(a(!0),r(v,null,h(t.value,(n,p)=>(a(),r("div",{class:"flex flex-col grow basis-0 px-1",key:p},[(a(!0),r(v,null,h(n.indexes,o=>(a(),r("div",{class:"py-1",key:o,ref_for:!0,ref:`item_${o}`},[E(e.$slots,"default",{item:l.items[o],index:o},()=>[C(N(l.items[o]),1)])]))),128)),L("div",{class:"grow -mt-20 pt-20 min-h-[100px] -z-10",ref_for:!0,ref_key:"bottomRef",ref:w,"data-column":p},null,8,R)]))),128))],2))}};export{D as _};
